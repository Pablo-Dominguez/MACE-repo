setwd("~/Documents/MUM/MACE/2ndo Bloque/Entrega/source")
df <- readxl::read_excel("../Pumpkin_Seeds_Dataset/Pumpkin_Seeds_Dataset.xlsx")
table(df$Class)
p<-ggplot(df, aes(x=df$Class, y=df$Area, color=df$Class)) + geom_boxplot()
install.packages("ggplot2")
library(ggplot2)
p<-ggplot(df, aes(x=df$Class, y=df$Area, color=df$Class)) + geom_boxplot()
p
p<-ggplot(df, aes(x=Class, y=Area, color=Class)) + geom_boxplot()
p
?aes
ggplot(df, aes(x=Class, y=Area, color=Class)) + geom_boxplot()
ggplot(df, aes(x=Class, y=c(Area,Perimeter), color=Class)) + geom_boxplot()
ggplot(df, aes(x=Class, y=c(Area,Perimeter), color=Class)) + geom_boxplot()
ggplot(df, aes(x=c(Area,Perimeter), y=Area, color=Class)) + geom_boxplot()
install.packages("cowplot")
library(cowplot)
p
p+rremove("x.text")
p+remove("x.text")
p+theme(axis.text.x = element_blank())
ggplot(df, aes(x="Class", y="Area", color="Class"))
ggplot(df, aes(x=df["Class"], y=df["Area"], color=df["Class"]))
df %>% colnames()
library(dplyr)
df %>% colnames()
df$"Area"
ggplot(df, aes(x=Class, y=Area, color=Class))
ggplot(df, aes(x=Class, y=Area, color=Class)) + geom_boxplot()
ggplot(df, aes(x=df$Class, y=df$Area, color=df$Class)) + geom_boxplot()
ggplot(df, aes(x=df$Class, y=df$Area, color=df$"Class")) + geom_boxplot()
ggplot(df, aes(x=df$Class, y=df$"Area", color=df$"Class")) + geom_boxplot()
ggplot(df, aes(x=df$"Class", y=df$"Area", color=df$"Class")) + geom_boxplot()
df %>% colnames() %>% setdiff(.,"Class")
df %>% colnames()
df %>% colnames() %>% setdiff(.,"Class")
for(col in df %>% colnames() %>% setdiff(.,"Class")){
p<-ggplot(df, aes(x=Class, y=df$col, color=Class)) + geom_boxplot()+ theme(axis.text.x = element_blank())
p}
p
for(col in df %>% colnames() %>% setdiff(.,"Class")){
p<-ggplot(df, aes(x=Class, y=df[col], color=Class)) + geom_boxplot()+ theme(axis.text.x = element_blank())
p}
p
for(col in df %>% colnames() %>% setdiff(.,"Class")){
print(col)
p<-ggplot(df, aes(x=Class, y=df[col], color=Class)) + geom_boxplot()+ theme(axis.text.x = element_blank())
p}
p
t
p %>% View()
for(col in df %>% colnames() %>% setdiff(.,"Class")){
print(col)
ps <- c()
p <- ggplot(df, aes(x=Class, y=df[col], color=Class)) + geom_boxplot()+ theme(axis.text.x = element_blank())
ps <- c(ps,p)
}
ps
ps[1]
ps[[1]]
ps
?ggarrange
library(cowplot)
?ggarrange
install.packages("ggpubr")
install.packages("lme4")
install.packages("minqa")
install.packages("minqa")
install.packages("ggpubr")
library(ggpubr)
?ggarrange
p
p <- ggplot(df, aes(x=Class, y=df[col], color=Class)) + geom_boxplot()+ theme(axis.text.x = element_blank())
col
p
p <- ggplot(df, aes(x=Class, y=df["Area"], color=Class)) + geom_boxplot()+ theme(axis.text.x = element_blank())
p
p <- ggplot(df, aes(x=Class, y="Area", color=Class)) + geom_boxplot()+ theme(axis.text.x = element_blank())
p
ggplot(df, aes(x=Class, y="Area", color=Class)) + geom_boxplot()+ theme(axis.text.x = element_blank())
ggplot(df, aes(x=Class, y=Area, color=Class)) + geom_boxplot()+ theme(axis.text.x = element_blank())
p <- ggplot(df, aes(x=Class, y=Area, color=Class)) + geom_boxplot()+ theme(axis.text.x = element_blank())
p
ggarrange(p, p, p + rremove("x.text"),
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
ggarrange(p, p, p,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
ggarrange(c(p,p,p),
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
unlist(c(p,p,p))
ggarrange(c(p,p,p,p,p) %>% unlist())
ggarrange(plotlist =  c(p,p,p,p,p))
warnings()
p
ggarrange(plotlist =  list(p,p,p,p,p))
ggarrange(plotlist =  list(c(p,p,p,p,p)))
t <- list()
t
typeof
typeof(t)
ggplot(df, aes(x=Class, y=col, color=Class)) + geom_boxplot()+ theme(axis.text.x = element_blank())
ggplot(df, aes_string(x="Class", y="Area", color="Class")) + geom_boxplot()+ theme(axis.text.x = element_blank())
for(colu in df %>% colnames() %>% setdiff(.,"Class")){
ps <- list()
p <- ggplot(df, aes_string(x="Class", y=colu, color="Class")) + geom_boxplot()+ theme(axis.text.x = element_blank())
ps <- append(ps,p)
}
ps
ggarrange(plotlist =  ps)
ps
ggarrange(plotlist = ps)
ggarrange(plotlist = ps, nrow = 4)
ggarrange(plotlist = ps, nrow = 4, ncol = 3)
ggarrange(plotlist = ps, nrow = 4)
for(colu in df %>% colnames() %>% setdiff(.,"Class")){
ps <- list()
p <- ggplot(df, aes_string(x="Class", y=colu, color="Class")) + geom_boxplot()+ theme(axis.text.x = element_blank())
ps <- append(ps,p)
}
ggarrange(plotlist =  ps)
typeof(ps)
Map(typeof,ps)
p
typeof(p)
Map(typeof,p)
ps[1]
print(ps[1])
t <- list()
t[[1]] <- "hola"
t
t[["tr"]] <- "hola"
t
for(colu in df %>% colnames() %>% setdiff(.,"Class")){
ps <- list()
p <- ggplot(df, aes_string(x="Class", y=colu, color="Class")) + geom_boxplot()+ theme(axis.text.x = element_blank())
ps[[colu]] <- p
}
ggarrange(plotlist =  ps)
ggarrange(plotlist =  ps)
ps
ps <- list()
for(colu in df %>% colnames() %>% setdiff(.,"Class")){
p <- ggplot(df, aes_string(x="Class", y=colu, color="Class")) + geom_boxplot()+ theme(axis.text.x = element_blank())
ps[[colu]] <- p
}
ggarrange(plotlist =  ps, nrow = 4,ncol = 3)
ggarrange(plotlist =  ps, nrow = 4,ncol = 3)
ps <- list()
for(colu in df %>% colnames() %>% setdiff(.,"Class")){
p <- ggplot(df, aes_string(x="Class", y=colu, color="Class")) + geom_boxplot()+ theme(axis.text.x = element_blank(), legend.key.size = unit(1, 'cm'), legend.text = element_text(size=10))
ps[[colu]] <- p
}
ggarrange(plotlist =  ps, nrow = 4,ncol = 3)
p
p <- ggplot(df, aes_string(x="Class", y=colu, color="Class"))
+ geom_boxplot()
+ theme(axis.text.x = element_blank(),
legend.key.size = unit(0.1, 'cm'),
legend.text = element_text(size=10))
ps <- list()
for(colu in df %>% colnames() %>% setdiff(.,"Class")){
p <- ggplot(df, aes_string(x="Class", y=colu, color="Class")) + geom_boxplot() + theme(
axis.text.x = element_blank(),
legend.key.size = unit(0.1, 'cm'),
legend.text = element_text(size=6))
ps[[colu]] <- p
}
ggarrange(plotlist =  ps, nrow = 4,ncol = 3)
p <- ggplot(df, aes_string(x="Class", y="Area", color="Class")) + geom_boxplot() + theme(
axis.text.x = element_blank(),
legend.key.size = unit(0.1, 'cm'),
legend.text = element_text(size=6))
p
p <- ggplot(df, aes_string(x="Class", y=colu, color="Class")) + geom_boxplot() + theme(
axis.text.x = element_blank(),
legend.key.size = unit(0.1, 'cm'),
legend.text = element_text(size=6),
legend.title = element_text(size=8))
p
